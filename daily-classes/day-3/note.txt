Day:- 3 (Internet Protocol)

What is TCP Protocol and Why It Is Widely Used

TCP (Transmission Control Protocol) is one of the core communication standards of the internet.

* It ensures reliable, ordered and error-checked delivery of data.
* Large data is broken into smaller packets, and TCP makes sure they are reassembled in the correct order at the destination.
* If any packet is lost or corrupted, TCP automatically resends it.
* This is why TCP is known for accuracy, reliability, and proper sequencing.

Example Use Cases:
Web browsing, sending emails, downloading files (FTP).


How Connection is Established Using TCP (3-Way Handshake)

Before sending data, TCP ensures that both client and server are ready by performing a 3-way handshake:

1. SYN (synchronise) -> Client sends a request to the server: “Can we connect?”
2. SYN-ACK (synchronise-acknowledge) -> Server replies: “Yes, I’m ready.”
3. ACK (acknowledge) -> Client confirms: “Okey, let’s start.”

👉 After these 3 steps, the connection is established.
This ensures synchronisation and reliability between client and server.


What is UDP and Why It Is Used for Fast Communication

UDP (User Datagram Protocol) is another major protocol, but unlike TCP, it focuses on speed over reliability.

* It sends packets directly without checking if they are received.
* There is no error correction and no sequencing.
* Packets may get lost or arrive in the wrong order, but communication remains  very fast.

Example Use Cases:
Video streaming, online gaming, voice and video calls — where speed matters more than 100% accuracy.


How UDP Works

UDP skips connection setup and directly sends packets:

* No handshake is required.
* Client -> directly sends packets -> Server.
* Some packets may be lost, but because of its low latency, it’s ideal for real-time communication.


Difference Between TCP and UDP

Feature	TCP (Transmission Control Protocol)	UDP (User Datagram Protocol)
Connection	Connection-oriented (3-way handshake)	Connectionless (no handshake)
Reliability	Reliable (error checking, retransmission)	Unreliable (no guarantee of delivery)
Speed	Slower (due to checks & confirmation)	Faster (no checks, direct send)
Use Cases	Web browsing, file transfer, email	Gaming, video streaming, voice calls
Packet Order	Maintains correct packet order	Packets may arrive out of order


